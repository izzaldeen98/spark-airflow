version: '3.8'

services:
  spark-master:
    image: bitnami/spark:3.3.2
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./jars:/opt/spark/jars
      - ./jobs:/opt/spark/jobs
      - ./config/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf
    networks:
      - spark-network

  spark-worker-1:
    image: bitnami/spark:3.3.2
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1g
    depends_on:
      - spark-master
    networks:
      - spark-network
    volumes:
      - ./jars:/opt/spark/jars
      - ./jobs:/opt/spark/jobs
      - ./config/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf

  spark-worker-2:
    image: bitnami/spark:3.3.2
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1g
    depends_on:
      - spark-master
    networks:
      - spark-network
    volumes:
      - ./jars:/opt/spark/jars
      - ./jobs:/opt/spark/jobs
      - ./config/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf

  spark-worker-3:
    image: bitnami/spark:3.3.2
    container_name: spark-worker-3
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1g
    depends_on:
      - spark-master
    networks:
      - spark-network
    volumes:
      - ./jars:/opt/spark/jars
      - ./jobs:/opt/spark/jobs
      - ./config/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf

  airflow-webserver:
    build:
      context: .
      dockerfile: airflow.dockerfile
    container_name: airflow-webserver
    restart: always
    ports:
      - "8081:8080"  # Changed port to avoid conflict with Spark
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__WEBSERVER__RBAC=True
    depends_on:
      - postgres
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./jobs:/opt/airflow/jobs
      - ./jars:/opt/airflow/jars  # Expose the jars to Airflow
    networks:
      - spark-network
    command: ["airflow", "webserver"]

  airflow-scheduler:
    build:
      context: .
      dockerfile: airflow.dockerfile
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - airflow-webserver
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./jobs:/opt/airflow/jobs
      - ./jars:/opt/airflow/jars  # Expose the jars to Airflow
    networks:
      - spark-network
    command: ["airflow", "scheduler"]

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - spark-network

networks:
  spark-network:
    driver: bridge
